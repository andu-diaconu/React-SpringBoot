{"ast":null,"code":"var _jsxFileName = \"C:\\\\UTCN\\\\AN 3\\\\SpringProjects\\\\CarSelling\\\\Frontend\\\\carsell-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport { useState, useEffect } from \"react\";\nimport { getUsers, addUser } from \"./Services/UsersService\";\nimport { getAdmins } from \"./Services/AdminsService\";\nimport Admin from \"./Admin\";\nimport User from \"./User\";\nimport Register from \"./Components/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [logged, setLogged] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  let navigate = useNavigate();\n  useEffect(() => {\n    getUsers().then(res => {\n      setUsers(res.data);\n    });\n    getAdmins().then(res => {\n      setAdmins(res.data);\n    });\n  }, []);\n\n  const handleRegister = newUser => {\n    addUser(newUser);\n    navigate(\"/\");\n  };\n\n  const handleLogged = () => {\n    setLogged(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              users: users,\n              admins: admins,\n              handleLogged: handleLogged\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), logged && /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/admin\",\n            element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 24\n          }, this), logged && /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/user\",\n            element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              users: users,\n              admins: admins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NKr5EPukiA1V6uXz7KjDlsFQEq4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/UTCN/AN 3/SpringProjects/CarSelling/Frontend/carsell-frontend/src/App.js"],"names":["BrowserRouter","Router","Route","Routes","useNavigate","Login","useState","useEffect","getUsers","addUser","getAdmins","Admin","User","Register","App","logged","setLogged","users","setUsers","admins","setAdmins","navigate","then","res","data","handleRegister","newUser","handleLogged"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SACEA,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,yBAAlC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIe,QAAQ,GAAGjB,WAAW,EAA1B;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,GAAGc,IAAX,CAAiBC,GAAD,IAAS;AACvBL,MAAAA,QAAQ,CAACK,GAAG,CAACC,IAAL,CAAR;AACD,KAFD;AAIAd,IAAAA,SAAS,GAAGY,IAAZ,CAAkBC,GAAD,IAAS;AACxBH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAL,CAAT;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,cAAc,GAAIC,OAAD,IAAa;AAClCjB,IAAAA,OAAO,CAACiB,OAAD,CAAP;AACAL,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAHD;;AAKA,QAAMM,YAAY,GAAG,MAAM;AACzBX,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,GAFP;AAGE,YAAA,OAAO,eACL,QAAC,KAAD;AACE,cAAA,KAAK,EAAEC,KADT;AAEE,cAAA,MAAM,EAAEE,MAFV;AAGE,cAAA,YAAY,EAAEQ;AAHhB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBADF,EAYGZ,MAAM,iBAAI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,QAAlB;AAA2B,YAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,kBAZb,EAaGA,MAAM,iBAAI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,OAAlB;AAA0B,YAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAbb,eAcE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,WAFP;AAGE,YAAA,OAAO,eAAE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEE,KAAjB;AAAwB,cAAA,MAAM,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GArDQL,G;UAIQV,W;;;KAJRU,G;AAuDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  useNavigate,\n} from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport { useState, useEffect } from \"react\";\nimport { getUsers, addUser } from \"./Services/UsersService\";\nimport { getAdmins } from \"./Services/AdminsService\";\nimport Admin from \"./Admin\";\nimport User from \"./User\";\nimport Register from \"./Components/Register\";\n\nfunction App() {\n  const [logged, setLogged] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    getUsers().then((res) => {\n      setUsers(res.data);\n    });\n\n    getAdmins().then((res) => {\n      setAdmins(res.data);\n    });\n  }, []);\n\n  const handleRegister = (newUser) => {\n    addUser(newUser);\n    navigate(\"/\");\n  };\n\n  const handleLogged = () => {\n    setLogged(true);\n  };\n\n  return (\n    <div>\n      <Router>\n        <div className=\"container\">\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <Login\n                  users={users}\n                  admins={admins}\n                  handleLogged={handleLogged}\n                />\n              }\n            />\n            {logged && <Route exact path=\"/admin\" element={<Admin />} />}\n            {logged && <Route exact path=\"/user\" element={<User />} />}\n            <Route\n              exact\n              path=\"/register\"\n              element={<Register users={users} admins={admins} />}\n            />\n          </Routes>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}