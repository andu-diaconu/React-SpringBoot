{"ast":null,"code":"var _jsxFileName = \"C:\\\\UTCN\\\\AN 3\\\\SpringProjects\\\\CarSelling\\\\Frontend\\\\carsell-frontend\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button, Alert } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignInAlt, faEnvelope, faLock, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { authenticateUser } from \"../../services/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [error, setError] = useState();\n  const [show, setShow] = useState(true);\n  const initialState = {\n    email: \"\",\n    password: \"\"\n  };\n  const [user, setUser] = useState(initialState);\n\n  const credentialChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const validateUser = () => {\n    dispatch(authenticateUser(user.email, user.password)).then(response => {\n      console.log(response.data);\n      return props.history.push(\"/home\");\n    }).catch(error => {\n      console.log(error.message);\n      setShow(true);\n      resetLoginForm();\n      setError(\"Invalid email and password\");\n    });\n  };\n\n  const resetLoginForm = () => {\n    setUser(initialState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"justify-content-md-center\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 5,\n      children: [show && props.message && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), show && error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-dark bg-dark text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSignInAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), \" Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faEnvelope\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"email\",\n                  value: user.email,\n                  onChange: credentialChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faLock\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"password\",\n                  name: \"password\",\n                  value: user.password,\n                  onChange: credentialChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"button\",\n            variant: \"success\",\n            onClick: validateUser,\n            disabled: user.email.length === 0 || user.password.length === 0,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSignInAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), \" Login\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"button\",\n            variant: \"info\",\n            onClick: resetLoginForm,\n            disabled: user.email.length === 0 && user.password.length === 0,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUndo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), \" Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"+zby2xT5rLmSK4ITMnG9M76YghM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/UTCN/AN 3/SpringProjects/CarSelling/Frontend/carsell-frontend/src/Components/Login.js"],"names":["React","useState","useDispatch","Row","Col","Card","Form","InputGroup","FormControl","Button","Alert","FontAwesomeIcon","faSignInAlt","faEnvelope","faLock","faUndo","authenticateUser","Login","props","error","setError","show","setShow","initialState","email","password","user","setUser","credentialChange","event","name","value","target","dispatch","validateUser","then","response","console","log","data","history","push","catch","message","resetLoginForm","textAlign","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSignInAlt,\r\n  faEnvelope,\r\n  faLock,\r\n  faUndo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { authenticateUser } from \"../../services/index\";\r\n\r\nconst Login = (props) => {\r\n  const [error, setError] = useState();\r\n  const [show, setShow] = useState(true);\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const [user, setUser] = useState(initialState);\r\n\r\n  const credentialChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const validateUser = () => {\r\n    dispatch(authenticateUser(user.email, user.password))\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        return props.history.push(\"/home\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        setShow(true);\r\n        resetLoginForm();\r\n        setError(\"Invalid email and password\");\r\n      });\r\n  };\r\n\r\n  const resetLoginForm = () => {\r\n    setUser(initialState);\r\n  };\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center\">\r\n      <Col xs={5}>\r\n        {show && props.message && (\r\n          <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\r\n            {props.message}\r\n          </Alert>\r\n        )}\r\n        {show && error && (\r\n          <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <Card className={\"border border-dark bg-dark text-white\"}>\r\n          <Card.Header>\r\n            <FontAwesomeIcon icon={faSignInAlt} /> Login\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <FontAwesomeIcon icon={faEnvelope} />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={user.email}\r\n                    onChange={credentialChange}\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Email Address\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <FontAwesomeIcon icon={faLock} />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={user.password}\r\n                    onChange={credentialChange}\r\n                    className={\"bg-dark text-white\"}\r\n                    placeholder=\"Enter Password\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Card.Body>\r\n          <Card.Footer style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              size=\"sm\"\r\n              type=\"button\"\r\n              variant=\"success\"\r\n              onClick={validateUser}\r\n              disabled={user.email.length === 0 || user.password.length === 0}\r\n            >\r\n              <FontAwesomeIcon icon={faSignInAlt} /> Login\r\n            </Button>{\" \"}\r\n            <Button\r\n              size=\"sm\"\r\n              type=\"button\"\r\n              variant=\"info\"\r\n              onClick={resetLoginForm}\r\n              disabled={user.email.length === 0 && user.password.length === 0}\r\n            >\r\n              <FontAwesomeIcon icon={faUndo} /> Reset\r\n            </Button>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}